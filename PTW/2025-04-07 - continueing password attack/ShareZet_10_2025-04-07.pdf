%PDF-1.3
%ºß¬à
3 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 4 0 R
>>
endobj
4 0 obj
<<
/Length 4454
>>
stream
0.5670000000000001 w
0 G
0.07 g
0. 841.8899999999999864 595.2799999999999727 -841.8899999999999864 re
f
0.12 g
0. 841.8899999999999864 595.2799999999999727 -85.0393700787401627 re
f
BT
/F2 14 Tf
16.0999999999999979 TL
1. g
267.8899999999999864 799.3703149606299121 Td
(ShareZet) Tj
ET
BT
/F2 8 Tf
9.1999999999999993 TL
1. g
194.9999999999999147 779.5277952755905062 Td
(Sharezet.com | Room: 10 | Date: 4/7/2025, 10:26:59 AM) Tj
ET
0.31 G
1.4173228346456694 w
28.3464566929133888 771.0238582677164914 m
566.933543307086552 771.0238582677164914 l
S
0.24 g
0.43 G
1.4173228346456694 w
36.8503937007874072 742.6774015748030706 m
377.0105196850393554 742.6774015748030706 l
381.7071144080098293 742.6774015748030706 385.5144566929133703 738.8700592898995865 385.5144566929133703 734.1734645669290558 c
385.5144566929133703 596.9766141732283131 l
385.5144566929133703 592.2800194502576687 380.8178619699428396 588.4726771653542983 377.0105196850393554 588.4726771653542983 c
36.8503937007874072 588.4726771653542983 l
32.1537989778168765 588.4726771653542983 28.3464566929133888 593.169271888324829 28.3464566929133888 596.9766141732283131 c
28.3464566929133888 734.1734645669290558 l
28.3464566929133888 738.8700592898995865 33.0430514158839159 742.6774015748030706 36.8503937007874072 742.6774015748030706 c
h
B
BT
/F2 8 Tf
10.4000000000000004 TL
1. g
48.1889763779527627 720.0002362204724022 Td
(Energetic Fox: BASIC KALI  LINUX COMMANDS) Tj
T* (Netcat command) Tj
T* (Scripting ) Tj
T* () Tj
T* (nmap / UDP SCAN/ OS CSAN/SYNSCAN/) Tj
T* () Tj
T* (ARP SPOOFING, DNS CACHE POISIONING, SQL Injection / Man in the) Tj
T* (Middle/) Tj
T* (Vulnerability scan such as : nessus ) Tj
T* (metasploit / meterpreter/ msfvenom /) Tj
T* (password attack, hydra, Retrieve Window boot ini and SAM ,) Tj
T* (hashdump) Tj
ET
0.24 g
0.43 G
1.4173228346456694 w
36.8503937007874072 577.1340944881889072 m
377.0105196850393554 577.1340944881889072 l
381.7071144080098293 577.1340944881889072 385.5144566929133703 573.3267522032854231 385.5144566929133703 568.6301574803148924 c
385.5144566929133703 515.3388188976377933 l
385.5144566929133703 510.6422241746672057 380.8178619699428396 506.8348818897637784 377.0105196850393554 506.8348818897637784 c
36.8503937007874072 506.8348818897637784 l
32.1537989778168765 506.8348818897637784 28.3464566929133888 511.5314766127342523 28.3464566929133888 515.3388188976377933 c
28.3464566929133888 568.6301574803148924 l
28.3464566929133888 573.3267522032854231 33.0430514158839159 577.1340944881889072 36.8503937007874072 577.1340944881889072 c
h
B
BT
/F2 8 Tf
10.4000000000000004 TL
1. g
48.1889763779527627 554.4569291338582389 Td
(Grumpy Walrus: How would you write a Bash script that uses the) Tj
T* (netcat \(nc\) command to check if a remote server is listening on a) Tj
T* (specific port and outputs a message based on whether the port is) Tj
T* (open or closed?) Tj
ET
0.24 g
0.43 G
1.4173228346456694 w
36.8503937007874072 495.4962992125983874 m
377.0105196850393554 495.4962992125983874 l
381.7071144080098293 495.4962992125983874 385.5144566929133703 491.6889569276948464 385.5144566929133703 486.9923622047243725 c
385.5144566929133703 433.7010236220471597 l
385.5144566929133703 429.0044288990766859 380.8178619699428396 425.1970866141731449 377.0105196850393554 425.1970866141731449 c
36.8503937007874072 425.1970866141731449 l
32.1537989778168765 425.1970866141731449 28.3464566929133888 429.8936813371436756 28.3464566929133888 433.7010236220471597 c
28.3464566929133888 486.9923622047243725 l
28.3464566929133888 491.6889569276948464 33.0430514158839159 495.4962992125983874 36.8503937007874072 495.4962992125983874 c
h
B
BT
/F2 8 Tf
10.4000000000000004 TL
1. g
48.1889763779527627 472.819133858267719 Td
(Quirky Lemur: use the nmap command with various option) Tj
T* (combinations to perform tasks like host discovery, service version) Tj
T* (detection, OS fingerprinting, and more? Provide examples of) Tj
T* (commonly used nmap scan types and explain their purposes.) Tj
ET
0.12 g
0. 841.8899999999999864 595.2799999999999727 -85.0393700787401627 re
f
BT
/F2 14 Tf
16.0999999999999979 TL
1. g
267.8899999999999864 799.3703149606299121 Td
(ShareZet) Tj
ET
BT
/F2 8 Tf
9.1999999999999993 TL
1. g
194.9999999999999147 779.5277952755905062 Td
(Sharezet.com | Room: 10 | Date: 4/7/2025, 10:26:59 AM) Tj
ET
0.31 G
1.4173228346456694 w
28.3464566929133888 771.0238582677164914 m
566.933543307086552 771.0238582677164914 l
S
endstream
endobj
1 0 obj
<</Type /Pages
/Kids [3 0 R ]
/Count 1
>>
endobj
5 0 obj
<<
/Type /Font
/BaseFont /Helvetica
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
6 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
7 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
8 0 obj
<<
/Type /Font
/BaseFont /Helvetica-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
9 0 obj
<<
/Type /Font
/BaseFont /Courier
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
10 0 obj
<<
/Type /Font
/BaseFont /Courier-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
11 0 obj
<<
/Type /Font
/BaseFont /Courier-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
12 0 obj
<<
/Type /Font
/BaseFont /Courier-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
13 0 obj
<<
/Type /Font
/BaseFont /Times-Roman
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
14 0 obj
<<
/Type /Font
/BaseFont /Times-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
15 0 obj
<<
/Type /Font
/BaseFont /Times-Italic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
16 0 obj
<<
/Type /Font
/BaseFont /Times-BoldItalic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
17 0 obj
<<
/Type /Font
/BaseFont /ZapfDingbats
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
18 0 obj
<<
/Type /Font
/BaseFont /Symbol
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
2 0 obj
<<
/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]
/Font <<
/F1 5 0 R
/F2 6 0 R
/F3 7 0 R
/F4 8 0 R
/F5 9 0 R
/F6 10 0 R
/F7 11 0 R
/F8 12 0 R
/F9 13 0 R
/F10 14 0 R
/F11 15 0 R
/F12 16 0 R
/F13 17 0 R
/F14 18 0 R
>>
/XObject <<
>>
>>
endobj
19 0 obj
<<
/Producer (jsPDF 2.5.1)
/CreationDate (D:20250407102659+05'30')
>>
endobj
20 0 obj
<<
/Type /Catalog
/Pages 1 0 R
/OpenAction [3 0 R /FitH null]
/PageLayout /OneColumn
>>
endobj
xref
0 21
0000000000 65535 f 
0000004658 00000 n 
0000006475 00000 n 
0000000015 00000 n 
0000000152 00000 n 
0000004715 00000 n 
0000004840 00000 n 
0000004970 00000 n 
0000005103 00000 n 
0000005240 00000 n 
0000005363 00000 n 
0000005492 00000 n 
0000005624 00000 n 
0000005760 00000 n 
0000005888 00000 n 
0000006015 00000 n 
0000006144 00000 n 
0000006277 00000 n 
0000006379 00000 n 
0000006723 00000 n 
0000006809 00000 n 
trailer
<<
/Size 21
/Root 20 0 R
/Info 19 0 R
/ID [ <C361D2F6053BC3EE0E3E602A96E77F19> <C361D2F6053BC3EE0E3E602A96E77F19> ]
>>
startxref
6913
%%EOF